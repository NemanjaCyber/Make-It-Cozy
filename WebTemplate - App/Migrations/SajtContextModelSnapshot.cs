// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(SajtContext))]
    partial class SajtContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Biljka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<bool>("DaLiCveta")
                        .HasColumnType("bit");

                    b.Property<string>("DrvenastaZeljasta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("List")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SajtIdID")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zaliha")
                        .HasColumnType("int");

                    b.Property<int>("ZivotniVek")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SajtIdID");

                    b.ToTable("Biljka");
                });

            modelBuilder.Entity("Models.KomentarIOcena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BiljkaID")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LampaID")
                        .HasColumnType("int");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<int?>("SaksijaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BiljkaID");

                    b.HasIndex("LampaID");

                    b.HasIndex("SaksijaID");

                    b.ToTable("KomentariIOcena");
                });

            modelBuilder.Entity("Models.Lampa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Boja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SajtIdID")
                        .HasColumnType("int");

                    b.Property<int>("Sirina")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visina")
                        .HasColumnType("int");

                    b.Property<int>("Zaliha")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SajtIdID");

                    b.ToTable("Lampa");
                });

            modelBuilder.Entity("Models.Sajt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Sajt");
                });

            modelBuilder.Entity("Models.Saksija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Boja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<string>("Materijal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SajtIdID")
                        .HasColumnType("int");

                    b.Property<int>("Sirina")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visina")
                        .HasColumnType("int");

                    b.Property<int>("Zaliha")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SajtIdID");

                    b.ToTable("Saksija");
                });

            modelBuilder.Entity("Models.Biljka", b =>
                {
                    b.HasOne("Models.Sajt", "SajtId")
                        .WithMany("Biljke")
                        .HasForeignKey("SajtIdID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SajtId");
                });

            modelBuilder.Entity("Models.KomentarIOcena", b =>
                {
                    b.HasOne("Models.Biljka", "Biljka")
                        .WithMany("KomentariIOcene")
                        .HasForeignKey("BiljkaID");

                    b.HasOne("Models.Lampa", "Lampa")
                        .WithMany("KomentariIOcene")
                        .HasForeignKey("LampaID");

                    b.HasOne("Models.Saksija", "Saksija")
                        .WithMany("KomentariIOcene")
                        .HasForeignKey("SaksijaID");

                    b.Navigation("Biljka");

                    b.Navigation("Lampa");

                    b.Navigation("Saksija");
                });

            modelBuilder.Entity("Models.Lampa", b =>
                {
                    b.HasOne("Models.Sajt", "SajtId")
                        .WithMany("Lampe")
                        .HasForeignKey("SajtIdID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SajtId");
                });

            modelBuilder.Entity("Models.Saksija", b =>
                {
                    b.HasOne("Models.Sajt", "SajtId")
                        .WithMany("Saksije")
                        .HasForeignKey("SajtIdID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SajtId");
                });

            modelBuilder.Entity("Models.Biljka", b =>
                {
                    b.Navigation("KomentariIOcene");
                });

            modelBuilder.Entity("Models.Lampa", b =>
                {
                    b.Navigation("KomentariIOcene");
                });

            modelBuilder.Entity("Models.Sajt", b =>
                {
                    b.Navigation("Biljke");

                    b.Navigation("Lampe");

                    b.Navigation("Saksije");
                });

            modelBuilder.Entity("Models.Saksija", b =>
                {
                    b.Navigation("KomentariIOcene");
                });
#pragma warning restore 612, 618
        }
    }
}
